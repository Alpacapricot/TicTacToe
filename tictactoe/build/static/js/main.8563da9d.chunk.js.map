{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","XisNext","i","this","slice","calculateWinner","xIsNext","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GACZ,OACE,wBACAC,UAAU,SACVC,QAASF,EAAME,QAFf,SAGGF,EAAMG,Q,IAITC,E,kDACF,WAAYJ,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJC,E,+CAOlB,SAAYC,GACR,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAExCJ,EAAQI,GAAKC,KAAKN,MAAMS,QAAU,IAAM,IACxCH,KAAKI,SAAS,CACZT,QAASA,EACTQ,SAAUH,KAAKN,MAAMS,a,0BAG7B,SAAaJ,GAAI,IAAD,OACd,OACA,cAACX,EAAD,CACCI,MAAQQ,KAAKN,MAAMC,QAAQI,GAC3BR,QAAS,kBAAM,EAAKc,YAAYN,Q,oBAGnC,WACE,IACIO,EADEC,EAASL,EAAgBF,KAAKN,MAAMC,SAQ1C,OALAW,EADIC,EACK,WAAaA,EAEb,iBAAmBP,KAAKN,MAAMS,QAAU,IAAM,KAIrD,gCACE,qBAAKb,UAAU,SAAf,SAAyBgB,IACzB,sBAAKhB,UAAU,YAAf,UACGU,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,MAErB,sBAAKlB,UAAU,YAAf,UACGU,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,MAErB,sBAAKlB,UAAU,YAAf,UACGU,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,a,GAlDTC,IAAMC,WAyDpBC,E,4JACJ,WACE,OACE,sBAAKrB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSmB,IAAMC,WAsBzB,SAASR,EAAgBP,GAWrB,IAVA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KArBXG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.8563da9d.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button \r\n      className=\"square\" \r\n      onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n }\r\nclass Board extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            XisNext: true,\r\n        };\r\n    }\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {      \r\n        return;    }    \r\n        squares[i] = this.state.xIsNext ? 'O' : 'X';\r\n        this.setState({\r\n          squares: squares,\r\n          xIsNext: !this.state.xIsNext,\r\n        });\r\n      }\r\n  renderSquare(i) {\r\n    return (\r\n    <Square\r\n     value ={this.state.squares[i]}\r\n     onClick={() => this.handleClick(i)} />);\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;    \r\n    if (winner) {      \r\n    status = 'Winner: ' + winner;   \r\n    } else {      \r\n    status = 'Next player: ' + (this.state.xIsNext ? 'O' : 'X');   \r\n }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }"],"sourceRoot":""}